// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/consumer/consumer.proto

package consumer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConsumerReadRequest struct {
	QueueName            string   `protobuf:"bytes,1,opt,name=QueueName,proto3" json:"QueueName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumerReadRequest) Reset()         { *m = ConsumerReadRequest{} }
func (m *ConsumerReadRequest) String() string { return proto.CompactTextString(m) }
func (*ConsumerReadRequest) ProtoMessage()    {}
func (*ConsumerReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e92dd3678396abb, []int{0}
}

func (m *ConsumerReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumerReadRequest.Unmarshal(m, b)
}
func (m *ConsumerReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumerReadRequest.Marshal(b, m, deterministic)
}
func (m *ConsumerReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumerReadRequest.Merge(m, src)
}
func (m *ConsumerReadRequest) XXX_Size() int {
	return xxx_messageInfo_ConsumerReadRequest.Size(m)
}
func (m *ConsumerReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumerReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumerReadRequest proto.InternalMessageInfo

func (m *ConsumerReadRequest) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

type ConsumerReadResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumerReadResponse) Reset()         { *m = ConsumerReadResponse{} }
func (m *ConsumerReadResponse) String() string { return proto.CompactTextString(m) }
func (*ConsumerReadResponse) ProtoMessage()    {}
func (*ConsumerReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e92dd3678396abb, []int{1}
}

func (m *ConsumerReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumerReadResponse.Unmarshal(m, b)
}
func (m *ConsumerReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumerReadResponse.Marshal(b, m, deterministic)
}
func (m *ConsumerReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumerReadResponse.Merge(m, src)
}
func (m *ConsumerReadResponse) XXX_Size() int {
	return xxx_messageInfo_ConsumerReadResponse.Size(m)
}
func (m *ConsumerReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumerReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumerReadResponse proto.InternalMessageInfo

func (m *ConsumerReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ConsumerGroupReadRequest struct {
	ConsumerGroupName    string   `protobuf:"bytes,1,opt,name=ConsumerGroupName,proto3" json:"ConsumerGroupName,omitempty"`
	ConsumerName         string   `protobuf:"bytes,2,opt,name=ConsumerName,proto3" json:"ConsumerName,omitempty"`
	QueueName            string   `protobuf:"bytes,3,opt,name=QueueName,proto3" json:"QueueName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumerGroupReadRequest) Reset()         { *m = ConsumerGroupReadRequest{} }
func (m *ConsumerGroupReadRequest) String() string { return proto.CompactTextString(m) }
func (*ConsumerGroupReadRequest) ProtoMessage()    {}
func (*ConsumerGroupReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e92dd3678396abb, []int{2}
}

func (m *ConsumerGroupReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumerGroupReadRequest.Unmarshal(m, b)
}
func (m *ConsumerGroupReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumerGroupReadRequest.Marshal(b, m, deterministic)
}
func (m *ConsumerGroupReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumerGroupReadRequest.Merge(m, src)
}
func (m *ConsumerGroupReadRequest) XXX_Size() int {
	return xxx_messageInfo_ConsumerGroupReadRequest.Size(m)
}
func (m *ConsumerGroupReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumerGroupReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumerGroupReadRequest proto.InternalMessageInfo

func (m *ConsumerGroupReadRequest) GetConsumerGroupName() string {
	if m != nil {
		return m.ConsumerGroupName
	}
	return ""
}

func (m *ConsumerGroupReadRequest) GetConsumerName() string {
	if m != nil {
		return m.ConsumerName
	}
	return ""
}

func (m *ConsumerGroupReadRequest) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

type ConsumerGroupReadResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumerGroupReadResponse) Reset()         { *m = ConsumerGroupReadResponse{} }
func (m *ConsumerGroupReadResponse) String() string { return proto.CompactTextString(m) }
func (*ConsumerGroupReadResponse) ProtoMessage()    {}
func (*ConsumerGroupReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e92dd3678396abb, []int{3}
}

func (m *ConsumerGroupReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumerGroupReadResponse.Unmarshal(m, b)
}
func (m *ConsumerGroupReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumerGroupReadResponse.Marshal(b, m, deterministic)
}
func (m *ConsumerGroupReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumerGroupReadResponse.Merge(m, src)
}
func (m *ConsumerGroupReadResponse) XXX_Size() int {
	return xxx_messageInfo_ConsumerGroupReadResponse.Size(m)
}
func (m *ConsumerGroupReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumerGroupReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumerGroupReadResponse proto.InternalMessageInfo

func (m *ConsumerGroupReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateConsumerGroupRequest struct {
	GroupName            string   `protobuf:"bytes,1,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	QueueName            string   `protobuf:"bytes,2,opt,name=QueueName,proto3" json:"QueueName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateConsumerGroupRequest) Reset()         { *m = CreateConsumerGroupRequest{} }
func (m *CreateConsumerGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CreateConsumerGroupRequest) ProtoMessage()    {}
func (*CreateConsumerGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e92dd3678396abb, []int{4}
}

func (m *CreateConsumerGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConsumerGroupRequest.Unmarshal(m, b)
}
func (m *CreateConsumerGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConsumerGroupRequest.Marshal(b, m, deterministic)
}
func (m *CreateConsumerGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConsumerGroupRequest.Merge(m, src)
}
func (m *CreateConsumerGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CreateConsumerGroupRequest.Size(m)
}
func (m *CreateConsumerGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConsumerGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConsumerGroupRequest proto.InternalMessageInfo

func (m *CreateConsumerGroupRequest) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *CreateConsumerGroupRequest) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

type CreateConsumerGroupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateConsumerGroupResponse) Reset()         { *m = CreateConsumerGroupResponse{} }
func (m *CreateConsumerGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CreateConsumerGroupResponse) ProtoMessage()    {}
func (*CreateConsumerGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e92dd3678396abb, []int{5}
}

func (m *CreateConsumerGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateConsumerGroupResponse.Unmarshal(m, b)
}
func (m *CreateConsumerGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateConsumerGroupResponse.Marshal(b, m, deterministic)
}
func (m *CreateConsumerGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateConsumerGroupResponse.Merge(m, src)
}
func (m *CreateConsumerGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CreateConsumerGroupResponse.Size(m)
}
func (m *CreateConsumerGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateConsumerGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateConsumerGroupResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ConsumerReadRequest)(nil), "ConsumerReadRequest")
	proto.RegisterType((*ConsumerReadResponse)(nil), "ConsumerReadResponse")
	proto.RegisterType((*ConsumerGroupReadRequest)(nil), "ConsumerGroupReadRequest")
	proto.RegisterType((*ConsumerGroupReadResponse)(nil), "ConsumerGroupReadResponse")
	proto.RegisterType((*CreateConsumerGroupRequest)(nil), "CreateConsumerGroupRequest")
	proto.RegisterType((*CreateConsumerGroupResponse)(nil), "CreateConsumerGroupResponse")
}

func init() { proto.RegisterFile("protos/consumer/consumer.proto", fileDescriptor_9e92dd3678396abb) }

var fileDescriptor_9e92dd3678396abb = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0x4f, 0xce, 0xcf, 0x2b, 0x2e, 0xcd, 0x4d, 0x2d, 0x82, 0x33, 0xf4, 0xc0, 0x12,
	0x4a, 0xc6, 0x5c, 0xc2, 0xce, 0x50, 0x91, 0xa0, 0xd4, 0xc4, 0x94, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4,
	0xe2, 0x12, 0x21, 0x19, 0x2e, 0xce, 0xc0, 0xd2, 0xd4, 0xd2, 0x54, 0xbf, 0xc4, 0xdc, 0x54, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x84, 0x80, 0x92, 0x01, 0x97, 0x08, 0xaa, 0xa6, 0xe2, 0x82,
	0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0x76, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0x74, 0x98, 0x1e,
	0x18, 0x57, 0xa9, 0x8b, 0x91, 0x4b, 0x02, 0xa6, 0xc5, 0xbd, 0x28, 0xbf, 0xb4, 0x00, 0xd9, 0x32,
	0x1d, 0x2e, 0x41, 0x14, 0x39, 0x24, 0x4b, 0x31, 0x25, 0x84, 0x94, 0xb8, 0x78, 0x60, 0x82, 0x60,
	0x85, 0x4c, 0x60, 0x85, 0x28, 0x62, 0xa8, 0xce, 0x67, 0x46, 0x77, 0xbe, 0x29, 0x97, 0x24, 0x16,
	0xb7, 0x10, 0xf4, 0x43, 0x04, 0x97, 0x94, 0x73, 0x51, 0x6a, 0x62, 0x49, 0x2a, 0x9a, 0x66, 0x78,
	0x88, 0xa1, 0x3b, 0x1e, 0x21, 0x80, 0xea, 0x20, 0x26, 0x74, 0x07, 0xc9, 0x72, 0x49, 0x63, 0x35,
	0x19, 0xe2, 0x24, 0xa3, 0x57, 0x8c, 0x5c, 0xdc, 0x30, 0x19, 0xc7, 0x00, 0x4f, 0x21, 0x1b, 0x2e,
	0x6e, 0x90, 0x93, 0xa1, 0xee, 0x12, 0x12, 0xd1, 0xc3, 0x12, 0x83, 0x52, 0xa2, 0x7a, 0xd8, 0xa2,
	0xc8, 0x80, 0x51, 0x28, 0x80, 0x4b, 0x18, 0x8b, 0x65, 0x42, 0xd2, 0x7a, 0xb8, 0x3d, 0x27, 0x25,
	0xa3, 0x87, 0xc7, 0x7d, 0x42, 0xde, 0x5c, 0x02, 0xf0, 0x70, 0x84, 0x39, 0x4a, 0x52, 0x0f, 0x57,
	0x74, 0x4b, 0x49, 0xe9, 0xe1, 0x0c, 0x7d, 0x03, 0xc6, 0x24, 0x36, 0x70, 0xba, 0x34, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x3c, 0xc6, 0x0c, 0x74, 0xb9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConsumerAPIClient is the client API for ConsumerAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsumerAPIClient interface {
	ReadMessage(ctx context.Context, in *ConsumerReadRequest, opts ...grpc.CallOption) (ConsumerAPI_ReadMessageClient, error)
	CreateConsumerGroup(ctx context.Context, in *CreateConsumerGroupRequest, opts ...grpc.CallOption) (*CreateConsumerGroupResponse, error)
	GroupReadMessage(ctx context.Context, in *ConsumerGroupReadRequest, opts ...grpc.CallOption) (ConsumerAPI_GroupReadMessageClient, error)
}

type consumerAPIClient struct {
	cc *grpc.ClientConn
}

func NewConsumerAPIClient(cc *grpc.ClientConn) ConsumerAPIClient {
	return &consumerAPIClient{cc}
}

func (c *consumerAPIClient) ReadMessage(ctx context.Context, in *ConsumerReadRequest, opts ...grpc.CallOption) (ConsumerAPI_ReadMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ConsumerAPI_serviceDesc.Streams[0], "/ConsumerAPI/ReadMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &consumerAPIReadMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ConsumerAPI_ReadMessageClient interface {
	Recv() (*ConsumerReadResponse, error)
	grpc.ClientStream
}

type consumerAPIReadMessageClient struct {
	grpc.ClientStream
}

func (x *consumerAPIReadMessageClient) Recv() (*ConsumerReadResponse, error) {
	m := new(ConsumerReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *consumerAPIClient) CreateConsumerGroup(ctx context.Context, in *CreateConsumerGroupRequest, opts ...grpc.CallOption) (*CreateConsumerGroupResponse, error) {
	out := new(CreateConsumerGroupResponse)
	err := c.cc.Invoke(ctx, "/ConsumerAPI/CreateConsumerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consumerAPIClient) GroupReadMessage(ctx context.Context, in *ConsumerGroupReadRequest, opts ...grpc.CallOption) (ConsumerAPI_GroupReadMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ConsumerAPI_serviceDesc.Streams[1], "/ConsumerAPI/GroupReadMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &consumerAPIGroupReadMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ConsumerAPI_GroupReadMessageClient interface {
	Recv() (*ConsumerGroupReadResponse, error)
	grpc.ClientStream
}

type consumerAPIGroupReadMessageClient struct {
	grpc.ClientStream
}

func (x *consumerAPIGroupReadMessageClient) Recv() (*ConsumerGroupReadResponse, error) {
	m := new(ConsumerGroupReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConsumerAPIServer is the server API for ConsumerAPI service.
type ConsumerAPIServer interface {
	ReadMessage(*ConsumerReadRequest, ConsumerAPI_ReadMessageServer) error
	CreateConsumerGroup(context.Context, *CreateConsumerGroupRequest) (*CreateConsumerGroupResponse, error)
	GroupReadMessage(*ConsumerGroupReadRequest, ConsumerAPI_GroupReadMessageServer) error
}

// UnimplementedConsumerAPIServer can be embedded to have forward compatible implementations.
type UnimplementedConsumerAPIServer struct {
}

func (*UnimplementedConsumerAPIServer) ReadMessage(req *ConsumerReadRequest, srv ConsumerAPI_ReadMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadMessage not implemented")
}
func (*UnimplementedConsumerAPIServer) CreateConsumerGroup(ctx context.Context, req *CreateConsumerGroupRequest) (*CreateConsumerGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConsumerGroup not implemented")
}
func (*UnimplementedConsumerAPIServer) GroupReadMessage(req *ConsumerGroupReadRequest, srv ConsumerAPI_GroupReadMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method GroupReadMessage not implemented")
}

func RegisterConsumerAPIServer(s *grpc.Server, srv ConsumerAPIServer) {
	s.RegisterService(&_ConsumerAPI_serviceDesc, srv)
}

func _ConsumerAPI_ReadMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConsumerReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConsumerAPIServer).ReadMessage(m, &consumerAPIReadMessageServer{stream})
}

type ConsumerAPI_ReadMessageServer interface {
	Send(*ConsumerReadResponse) error
	grpc.ServerStream
}

type consumerAPIReadMessageServer struct {
	grpc.ServerStream
}

func (x *consumerAPIReadMessageServer) Send(m *ConsumerReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ConsumerAPI_CreateConsumerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConsumerGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerAPIServer).CreateConsumerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ConsumerAPI/CreateConsumerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerAPIServer).CreateConsumerGroup(ctx, req.(*CreateConsumerGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsumerAPI_GroupReadMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConsumerGroupReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConsumerAPIServer).GroupReadMessage(m, &consumerAPIGroupReadMessageServer{stream})
}

type ConsumerAPI_GroupReadMessageServer interface {
	Send(*ConsumerGroupReadResponse) error
	grpc.ServerStream
}

type consumerAPIGroupReadMessageServer struct {
	grpc.ServerStream
}

func (x *consumerAPIGroupReadMessageServer) Send(m *ConsumerGroupReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ConsumerAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ConsumerAPI",
	HandlerType: (*ConsumerAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateConsumerGroup",
			Handler:    _ConsumerAPI_CreateConsumerGroup_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadMessage",
			Handler:       _ConsumerAPI_ReadMessage_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GroupReadMessage",
			Handler:       _ConsumerAPI_GroupReadMessage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/consumer/consumer.proto",
}
