syntax = "proto3";

message BindQueueRequest {
  string ExchangeName = 1;
  string QueueName = 2;
}

message BindQueueResponse {
}

// An exchange can be Fanout or Direct - The default exchange is a fanout exchange
message CreateExchangeRequest {
  string ExchangeName = 1;
  string Type = 2;
}

message CreateExchangeResponse {
}

message CreateQueueRequest {
  string QueueName = 2;
}

message CreateQueueResponse {
}

message ProduceRequest {
  string ExchangeName = 1;
  string QueueName = 2;
  repeated bytes MessageSet = 3;
}

message ProduceResponse {
  uint32 ErrorCode = 1;
}

message ConsumerReadRequest {
    string QueueName = 1;
}

message ConsumerReadResponse {
    string Message = 1;
}

message ConsumerGroupReadRequest {
    string ConsumerGroupName = 1;
    string ConsumerName = 2;
    string QueueName = 3;
}

message ConsumerGroupReadResponse {
    string Message = 1;
}

message CreateConsumerGroupRequest {
    string GroupName = 1;
    string QueueName = 2;
}

message CreateConsumerGroupResponse {
}

service ConsumerAPI {
    rpc ReadMessage (ConsumerReadRequest) returns (stream ConsumerReadResponse);
    rpc CreateConsumerGroup(CreateConsumerGroupRequest) returns (CreateConsumerGroupResponse);
    rpc GroupReadMessage(ConsumerGroupReadRequest) returns (stream ConsumerGroupReadResponse);
}

service ProduceAPI {
  rpc BindQueue (BindQueueRequest) returns (BindQueueResponse);
  rpc CreateExchange(CreateExchangeRequest) returns (CreateExchangeResponse);
  rpc CreateQueue(CreateQueueRequest) returns (CreateQueueResponse);
  rpc ProduceMessage (ProduceRequest) returns (ProduceResponse);
}

